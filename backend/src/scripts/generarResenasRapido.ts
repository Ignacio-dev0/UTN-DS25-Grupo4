// backend/src/scripts/generarResenasRapido.ts
import { PrismaClient, EstadoAlquiler, Rol } from '@prisma/client';
import bcrypt from 'bcrypt';

const prisma = new PrismaClient();

async function main() {
  console.log('‚≠ê Generando 5 rese√±as por cancha...');

  try {
    // Obtener todas las canchas
    const canchas = await prisma.cancha.findMany();
    console.log(`üèüÔ∏è Encontradas ${canchas.length} canchas`);

    // Obtener todos los clientes
    const clientes = await prisma.usuario.findMany({
      where: { rol: Rol.CLIENTE }
    });
    console.log(`üë• Encontrados ${clientes.length} clientes`);

    const comentarios = [
      'Excelente cancha, muy bien mantenida y buena atenci√≥n',
      'Instalaciones de primera calidad, iluminaci√≥n perfecta',
      'Muy buen estado del c√©sped sint√©tico, experiencia incre√≠ble',
      'Vestuarios limpios y amplios, muy recomendable',
      'Perfecto para jugar con amigos, ambiente familiar',
      'Precio justo por la calidad ofrecida',
      'Cancha en perfectas condiciones, muy satisfecho',
      'Excelente servicio, personal muy amable',
      'Instalaciones modernas con todos los servicios',
      'Muy buena ubicaci√≥n y f√°cil acceso',
      'Calidad premium a precio accesible',
      'Canchas profesionales con tecnolog√≠a de punta',
      'Ambiente seguro y bien cuidado',
      'Superficie de juego excelente, equipos en buen estado',
      'Instalaciones limpias y modernas'
    ];

    let totalResenias = 0;

    // Crear 5 rese√±as por cancha
    for (const cancha of canchas) {
      console.log(`   üéØ Generando rese√±as para cancha ${cancha.id}...`);
      
      for (let i = 0; i < 5; i++) {
        // Seleccionar cliente aleatorio
        const clienteRandom = clientes[Math.floor(Math.random() * clientes.length)];
        
        // Crear turno en el pasado
        const fechaPasada = new Date();
        fechaPasada.setDate(fechaPasada.getDate() - Math.floor(Math.random() * 30) - 1);
        
        const horaAleatoria = Math.floor(Math.random() * 16) + 7;
        const precioAleatorio = Math.floor(Math.random() * (25000 - 10000) + 10000);
        
        const turno = await prisma.turno.create({
          data: {
            fecha: fechaPasada,
            horaInicio: new Date(`1970-01-01T${horaAleatoria.toString().padStart(2, '0')}:00:00Z`),
            precio: precioAleatorio,
            reservado: true,
            canchaId: cancha.id,
          }
        });
        
        // Crear alquiler
        const alquiler = await prisma.alquiler.create({
          data: {
            estado: EstadoAlquiler.FINALIZADO,
            clienteId: clienteRandom.id,
            turnos: {
              connect: [{ id: turno.id }]
            }
          }
        });
        
        // Crear rese√±a
        let puntaje = 5;
        const rand = Math.random();
        if (rand > 0.60 && rand <= 0.85) {
          puntaje = 4;
        } else if (rand > 0.85) {
          puntaje = 3;
        }
        
        const comentario = comentarios[Math.floor(Math.random() * comentarios.length)];
        
        await prisma.resenia.create({
          data: {
            descripcion: comentario,
            puntaje: puntaje,
            alquilerId: alquiler.id,
          }
        });
        
        totalResenias++;
      }
    }

    console.log(`‚úÖ Generadas ${totalResenias} rese√±as (5 por cada una de las ${canchas.length} canchas)`);

    // Verificar estad√≠sticas finales
    const reseniasCreadas = await prisma.resenia.findMany();
    const distribucion = {
      5: reseniasCreadas.filter(r => r.puntaje === 5).length,
      4: reseniasCreadas.filter(r => r.puntaje === 4).length,
      3: reseniasCreadas.filter(r => r.puntaje === 3).length
    };
    
    console.log('üìä Distribuci√≥n de puntajes:');
    console.log(`   - 5 estrellas: ${distribucion[5]} (${Math.round((distribucion[5]/totalResenias)*100)}%)`);
    console.log(`   - 4 estrellas: ${distribucion[4]} (${Math.round((distribucion[4]/totalResenias)*100)}%)`);
    console.log(`   - 3 estrellas: ${distribucion[3]} (${Math.round((distribucion[3]/totalResenias)*100)}%)`);

  } catch (error) {
    console.error('‚ùå Error:', error);
    throw error;
  } finally {
    await prisma.$disconnect();
  }
}

main().catch((e) => {
  console.error(e);
  process.exit(1);
});